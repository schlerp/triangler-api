/* tslint:disable */
/* eslint-disable */
/**
 * Triangler
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ExperimentOut
 */
export interface ExperimentOut {
    /**
     *
     * @type {number}
     * @memberof ExperimentOut
     */
    id?: number;
    /**
     *
     * @type {string}
     * @memberof ExperimentOut
     */
    name: string;
    /**
     *
     * @type {string}
     * @memberof ExperimentOut
     */
    description: string;
    /**
     *
     * @type {Date}
     * @memberof ExperimentOut
     */
    dateStarted: Date;
    /**
     *
     * @type {Date}
     * @memberof ExperimentOut
     */
    dateEnded: Date;
    /**
     *
     * @type {number}
     * @memberof ExperimentOut
     */
    sampleSize: number;
    /**
     *
     * @type {number}
     * @memberof ExperimentOut
     */
    pValue: number;
}

/**
 * Check if a given object implements the ExperimentOut interface.
 */
export function instanceOfExperimentOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "dateStarted" in value;
    isInstance = isInstance && "dateEnded" in value;
    isInstance = isInstance && "sampleSize" in value;
    isInstance = isInstance && "pValue" in value;

    return isInstance;
}

export function ExperimentOutFromJSON(json: any): ExperimentOut {
    return ExperimentOutFromJSONTyped(json, false);
}

export function ExperimentOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'dateStarted': (new Date(json['date_started'])),
        'dateEnded': (new Date(json['date_ended'])),
        'sampleSize': json['sample_size'],
        'pValue': json['p_value'],
    };
}

export function ExperimentOutToJSON(value?: ExperimentOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'name': value.name,
        'description': value.description,
        'date_started': (value.dateStarted.toISOString().substring(0,10)),
        'date_ended': (value.dateEnded.toISOString().substring(0,10)),
        'sample_size': value.sampleSize,
        'p_value': value.pValue,
    };
}
