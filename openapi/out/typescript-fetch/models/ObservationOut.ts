/* tslint:disable */
/* eslint-disable */
/**
 * Triangler
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ObservationOut
 */
export interface ObservationOut {
    /**
     *
     * @type {number}
     * @memberof ObservationOut
     */
    id?: number;
    /**
     *
     * @type {Date}
     * @memberof ObservationOut
     */
    createdAt: Date;
    /**
     *
     * @type {string}
     * @memberof ObservationOut
     */
    correctSample: string;
    /**
     *
     * @type {number}
     * @memberof ObservationOut
     */
    experiment: number;
    /**
     *
     * @type {string}
     * @memberof ObservationOut
     */
    token: string;
}

/**
 * Check if a given object implements the ObservationOut interface.
 */
export function instanceOfObservationOut(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "correctSample" in value;
    isInstance = isInstance && "experiment" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function ObservationOutFromJSON(json: any): ObservationOut {
    return ObservationOutFromJSONTyped(json, false);
}

export function ObservationOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObservationOut {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': (new Date(json['created_at'])),
        'correctSample': json['correct_sample'],
        'experiment': json['experiment'],
        'token': json['token'],
    };
}

export function ObservationOutToJSON(value?: ObservationOut | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'correct_sample': value.correctSample,
        'experiment': value.experiment,
        'token': value.token,
    };
}
