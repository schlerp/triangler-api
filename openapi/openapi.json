{"openapi": "3.0.2", "info": {"title": "Triangler", "version": "1.0.0", "description": ""}, "paths": {"/api/v1/experiments": {"get": {"operationId": "experiments_api_get_all_experiments", "summary": "Get All Experiments", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "array", "items": {"$ref": "#/components/schemas/ExperimentOut"}}}}}}, "description": "Gets all experiments defined in this application.", "tags": ["Experiments"]}, "post": {"operationId": "experiments_api_create_experiment", "summary": "Create Experiment", "parameters": [], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JustId"}}}}}, "description": "Creates a new experiment with the supplied payload, returns the experiment id.", "tags": ["Experiments"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExperimentIn"}}}, "required": true}}}, "/api/v1/experiments/{experiment_id}": {"get": {"operationId": "experiments_api_get_experiment_by_id", "summary": "Get Experiment By Id", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExperimentOut"}}}}}, "description": "Get a specific experiemnt by its experiment ID.", "tags": ["Experiments"]}, "put": {"operationId": "experiments_api_update_experiment", "summary": "Update Experiment", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Updates the experiment with `experiment id`, using supplied payload", "tags": ["Experiments"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExperimentIn"}}}, "required": true}}, "delete": {"operationId": "experiments_api_delete_experiment", "summary": "Delete Experiment", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Deletes the experiment with a matching id.", "tags": ["Experiments"]}}, "/api/v1/experiments/{experiment_id}/observations": {"get": {"operationId": "experiments_api_get_all_observations", "summary": "Get All Observations", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "array", "items": {"$ref": "#/components/schemas/ObservationOut"}}}}}}, "description": "Gets all observations defined for provided experiment id.", "tags": ["Observations"]}}, "/api/v1/experiments/{experiment_id}/observations/{observation_id}": {"get": {"operationId": "experiments_api_get_observation_by_id", "summary": "Get Observation By Id", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationOut"}}}}}, "description": "Get a specific observation by its experiment id and observation id.", "tags": ["Observations"]}}, "/api/v1/experiments/{experiment_id}/observation": {"post": {"operationId": "experiments_api_create_observation", "summary": "Create Observation", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationOut"}}}}}, "description": "Creates a new observation with the supplied payload, returns the observation id.", "tags": ["Observations"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationIn"}}}, "required": true}}}, "/api/v1/experiments/{experiment_id}/observation/{observation_id}": {"put": {"operationId": "experiments_api_update_observation", "summary": "Update Observation", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Updates the observation on experiment, using supplied payload", "tags": ["Observations"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationIn"}}}, "required": true}}, "delete": {"operationId": "experiments_api_delete_observation", "summary": "Delete Observation", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Deletes the observation on provided experiment with a matching id.", "tags": ["Observations"]}}, "/api/v1/experiments/{experiment_id}/responses": {"get": {"operationId": "experiments_api_get_all_observation_responses", "summary": "Get All Observation Responses", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"title": "Response", "type": "array", "items": {"$ref": "#/components/schemas/ObservationResponseOut"}}}}}}, "description": "Gets all observations defined for provided experiment id.", "tags": ["Observation Responses"]}, "post": {"operationId": "experiments_api_create_observation_response", "summary": "Create Observation Response", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/JustId"}}}}}, "description": "Creates a new observation with the supplied payload, returns the observation id.", "tags": ["Observation Responses"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationResponseIn"}}}, "required": true}}}, "/api/v1/experiments/{experiment_id}/responses/{observation_id}": {"get": {"operationId": "experiments_api_get_observation_response_by_id", "summary": "Get Observation Response By Id", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationResponseOut"}}}}}, "description": "Get a specific observation by its experiment id and observation id.", "tags": ["Observation Responses"]}, "put": {"operationId": "experiments_api_update_observation_response", "summary": "Update Observation Response", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Updates the observation on experiment, using supplied payload", "tags": ["Observation Responses"], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ObservationResponseIn"}}}, "required": true}}, "delete": {"operationId": "experiments_api_delete_observation_response", "summary": "Delete Observation Response", "parameters": [{"in": "path", "name": "experiment_id", "schema": {"title": "Experiment Id", "type": "integer"}, "required": true}, {"in": "path", "name": "observation_id", "schema": {"title": "Observation Id", "type": "integer"}, "required": true}], "responses": {"200": {"description": "OK", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Success"}}}}}, "description": "Deletes the observation on provided experiment with a matching id.", "tags": ["Observation Responses"]}}}, "components": {"schemas": {"ExperimentOut": {"title": "ExperimentOut", "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "name": {"title": "Name", "maxLength": 128, "type": "string"}, "description": {"title": "Description", "maxLength": 2048, "type": "string"}, "date_started": {"title": "Date Started", "type": "string", "format": "date"}, "date_ended": {"title": "Date Ended", "type": "string", "format": "date"}, "sample_size": {"title": "Sample Size", "type": "integer"}, "p_value": {"title": "P Value", "type": "number"}}, "required": ["name", "description", "date_started", "date_ended", "sample_size", "p_value"]}, "JustId": {"title": "JustId", "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}}, "required": ["id"]}, "ExperimentIn": {"title": "ExperimentIn", "type": "object", "properties": {"name": {"title": "Name", "maxLength": 128, "type": "string"}, "description": {"title": "Description", "maxLength": 2048, "type": "string"}, "date_started": {"title": "Date Started", "type": "string", "format": "date"}, "date_ended": {"title": "Date Ended", "type": "string", "format": "date"}}, "required": ["name", "description", "date_started", "date_ended"]}, "Success": {"title": "Success", "type": "object", "properties": {"success": {"title": "Success", "type": "boolean"}}, "required": ["success"]}, "ObservationOut": {"title": "ObservationOut", "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "created_at": {"title": "Created At", "type": "string", "format": "date-time"}, "correct_sample": {"title": "Correct Sample", "maxLength": 1, "type": "string"}, "experiment": {"title": "Experiment", "type": "integer"}, "token": {"title": "Token", "type": "string"}}, "required": ["created_at", "correct_sample", "experiment", "token"]}, "ObservationIn": {"title": "ObservationIn", "type": "object", "properties": {"correct_sample": {"title": "Correct Sample", "maxLength": 1, "type": "string"}, "experiment_id": {"title": "Experiment", "type": "integer"}}, "required": ["correct_sample", "experiment_id"]}, "ObservationResponseOut": {"title": "ObservationResponseOut", "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "chosen_sample": {"title": "Chosen Sample", "maxLength": 1, "type": "string"}, "response_date": {"title": "Response Date", "type": "string", "format": "date-time"}, "experiment": {"title": "Experiment", "type": "integer"}, "observation": {"title": "Observation", "type": "integer"}, "is_correct": {"title": "Is Correct", "type": "boolean"}, "experience_level": {"title": "Experience Level", "type": "string"}}, "required": ["chosen_sample", "response_date", "experiment", "observation", "is_correct", "experience_level"]}, "ObservationResponseIn": {"title": "ObservationResponseIn", "type": "object", "properties": {"chosen_sample": {"title": "Chosen Sample", "maxLength": 1, "type": "string"}, "response_date": {"title": "Response Date", "type": "string", "format": "date-time"}, "experiment_id": {"title": "Experiment", "type": "integer"}, "observation_id": {"title": "Observation", "type": "integer"}, "experience_level": {"title": "Experience Level", "type": "string"}, "token": {"title": "Token", "type": "string"}}, "required": ["chosen_sample", "response_date", "experiment_id", "observation_id", "experience_level", "token"]}}}, "servers": null}
